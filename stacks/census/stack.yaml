# Label is the displayed name of this stack
label: "Census"
# Should a hopscotch tour be displayed.
has_tour: false
# The hash to load if the user hasn't started using this stack.
# If you leave this blank the slices will start with nothing selected or defaults.
initial_hash: ""
# Provides data to the global filters
# Can be either a data service class in your service.py file (e.g. 'realtorservice.FilterService')
# or a json file in the fixtures directory (e.g. 'filters.json')
global_filters_service: "censusv2service.FilterService"
slices:
#
# Slice documentation: http://dev.fruitiondata.com/static/docs/slices.html
# How to build titles: http://dev.fruitiondata.com/static/docs/title-templates.html
#
#- slice_type: "option-chooser"
#  # The title line for the slice.
#  title: "Explore your data"
#  # Detailed configuration for the slice.
#  config:
#    "maxSelections": 1
#    "minSelections": 1
#    "optionExtraClass": "option-item-fixed-width"
#    "optionTemplate": |-
#      <div data-id="{{=id}}" class="group-container__item"><div class="group-container__item__label">{{=label}}</div><div class="group-container__item__value">{{=formattedValue}}</div></div>
#    "showTitles": false
#  # Provides data to the slice
#  # Can be either a data service class in your service.py file (e.g. 'realtorservice.RankedListService')
#  # or a json file in the fixtures directory (e.g. 'rankedlist.json')
#  data_service: "censusv2service.KeyMetricsService"

- slice_type: "option-chooser"
  slug: "foo"
  # The title line for the slice.
  title: "This should go away"
  # Detailed configuration for the slice.
  config:
    "optionExtraClass": "option-item-fixed-width"
#    {{=format('value', undefined, 'id')}} means: in the current object, format value  of a 'value' field
#    we don't have a static format specifier (undefined), but you can lookup the format in metadata using the 'id' field's value
#    so, the specifier is metadata[item.id].format
    "optionTemplate": |-
      <div data-id="{{= datum.id }}" class="group-container__item"><div class="group-container__item__label">{{= datum.label}}</div><div class="group-container__item__value">{{= datum.format('value', undefined, 'id') }}</div></div>
    "showTitles": false
    "minSelections": 1
    "maxSelections": 1
  # Provides data to the slice
  # Can be either a data service class in your service.py file (e.g. 'realtorservice.RankedListService')
  # or a json file in the fixtures directory (e.g. 'rankedlist.json')
  data_service: "censusv2service.FirstChooserV3Service"

- slice_type: "option-chooser"
  slug: "bar"
  # The title line for the slice.
  title: "This could stay here"
  # Detailed configuration for the slice.
  config:
    "optionExtraClass": "option-item-fixed-width"
    "optionTemplate": |-
      <div data-id="{{= datum.id }}" class="group-container__item"><div class="group-container__item__label">{{= datum.label }}</div><div class="group-container__item__value">{{= datum.format('value', ',.2s') }}</div></div>
    "showTitles": false
    "minSelections": 1
    "maxSelections": 1

  eventmap:
# TODO: this should go away, because in v3 it is automatic
    "filter_change":
    - "foo"
  # Provides data to the slice
  # Can be either a data service class in your service.py file (e.g. 'realtorservice.RankedListService')
  # or a json file in the fixtures directory (e.g. 'rankedlist.json')
  data_service: "censusv2service.SecondChooserV3Service"

- slice_type: "distribution"
  slug: "distribution1"
  # The title line for the slice.
  title: "Distribution slice"
  # Detailed configuration for the slice.
  config:
    "cellTemplateName": "#distribution-template"
    "colors": {"Ages": {"range": ["#f00", "#0f0"], "field": "value"} }
  eventmap:
# TODO: this should go away, because in v3 it is automatic
    "filter_change":
      - "foo"
      - "bar"
  # Provides data to the slice
  # Can be either a data service class in your service.py file (e.g. 'realtorservice.RankedListService')
  # or a json file in the fixtures directory (e.g. 'rankedlist.json')
  data_service: "censusv2service.DistributionV3Service"


- slice_type: "details-table"
  slug: "table1"
  # The title line for the slice.
  title: "Details table"
  # Detailed configuration for the slice.
  config:
    "minSelections": 2
    "maxSelections": 4
    "name_field": "student_name"
  eventmap:
# TODO: this should go away, because in v3 it is automatic
    "filter_change":
      - "foo"
      - "bar"
      - "distribution1"
  # Provides data to the slice
  # Can be either a data service class in your service.py file (e.g. 'realtorservice.RankedListService')
  # or a json file in the fixtures directory (e.g. 'rankedlist.json')
  data_service: "sample-table.json"


- slice_type: "ranked-list"
  slug: "rankedlist1"
  # The title line for the slice.
  title: "Ranked list"
  # Detailed configuration for the slice.
  config:
    "name_field": "student_name"
  eventmap:
# TODO: this should go away, because in v3 it is automatic
    "filter_change":
      - "foo"
      - "bar"
      - "distribution1"
      - "table1"
  # Provides data to the slice
  # Can be either a data service class in your service.py file (e.g. 'realtorservice.RankedListService')
  # or a json file in the fixtures directory (e.g. 'rankedlist.json')
  data_service: "sample-rankedlist.json"

>>>>>>> 26ad9ea69cc1ef2c1da63e74e10ea8dd8d8c9201
